<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.indexdata.livedocs</groupId>
	<artifactId>livedocs-manager</artifactId>
	<version>1.0.0</version>
	<name>LiveDocs Manager Application</name>
	<description>This application will provide a GUI interface to manage clients' discs data.</description>

	<organization>
		<name>LiveDocs</name>
		<url>https://live-docs.com</url>
	</organization>

	<contributors>
		<contributor>
			<name>Adam Dec</name>
			<roles>
				<role>Software Architect</role>
			</roles>
			<email>adec@indexdata.eu</email>
			<organization>Indexdata</organization>
		</contributor>

		<contributor>
			<name>Tomasz Ramus</name>
			<roles>
				<role>Business Analyst</role>
			</roles>
			<email>tramus@indexdata.eu</email>
			<organization>Indexdata</organization>
		</contributor>
	</contributors>

	<properties>
		<start-class>com.indexdata.livedocs.manager.ManagerBootstrap</start-class>
		<instrument.jar>lib/spring-instrument-4.2.5.RELEASE.jar</instrument.jar>
		<root.dir>${basedir}</root.dir>
		<svn.root.dir>https://server/livedocs_manager</svn.root.dir>
		<staging.dir>${project.build.directory}/staging</staging.dir>

		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Livedocs -->
		<livedocs.security.version>1.0.0</livedocs.security.version>
		<livedocs.ui.commons.version>1.0.0</livedocs.ui.commons.version>

		<!-- Common -->
		<spring.version>4.2.5.RELEASE</spring.version>
		<spring.security.version>4.0.4.RELEASE</spring.security.version>
		<spring.data.version>1.9.4.RELEASE</spring.data.version>
		<querydsl.version>3.7.2</querydsl.version>
		<guava.version>19.0</guava.version>
		<commons.io.version>2.4</commons.io.version>
		<commons.lang.version>3.4</commons.lang.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons.validator.version>1.4.1</commons.validator.version>
		<commons.codec.version>1.10</commons.codec.version>
		<jackson.version>2.7.2</jackson.version>
		<joda-time.version>2.9.2</joda-time.version>
		<swt32.version>4.6.M5_32</swt32.version>
		<swt64.version>4.6.M5_64</swt64.version>

		<vt.password.version>3.1.2</vt.password.version>
		<jasypt.version>1.9.2</jasypt.version>
		<izpack.compiler.version>4.3.5</izpack.compiler.version>

		<!-- Database -->
		<hikari.version>2.4.4</hikari.version>
		<hibernate.version>4.3.11.Final</hibernate.version>
		<h2.version>1.4.191</h2.version>
		<ehcache.version>2.6.11</ehcache.version>

		<!-- Logging -->
		<slf4j.version>1.7.18</slf4j.version>
		<logback.version>1.1.6</logback.version>
		<log4j.version>1.2.17</log4j.version>

		<!-- Testing -->
		<mockito.version>1.10.18</mockito.version>
		<junit.version>4.12</junit.version>
		<dbunit.version>2.5.1</dbunit.version>
		<fest.version>2.0M10</fest.version>
		<springockito.version>1.0.9</springockito.version>
		<hamcrest.version>1.3</hamcrest.version>

		<!-- Plugins -->
		<maven.jar.version>2.5</maven.jar.version>
		<maven.war.version>2.4</maven.war.version>
		<maven.source.version>2.3</maven.source.version>
		<maven.compiler.version>3.1</maven.compiler.version>
		<maven.javadoc.version>2.10.1</maven.javadoc.version>
		<maven.surefire.version>2.17</maven.surefire.version>
		<maven.release.version>2.5.1</maven.release.version>
		<maven.build.helper.version>1.9.1</maven.build.helper.version>
		<maven.apt.version>1.1.3</maven.apt.version>
		<maven.findbugs.version>2.5.5</maven.findbugs.version>
		<maven.cxf.version>3.0.3</maven.cxf.version>
		<maven.changelog.version>2.3</maven.changelog.version>
		<maven.dependency.version>2.9</maven.dependency.version>
		<maven.shade.version>2.3</maven.shade.version>
		<maven.exec.version>1.3.2</maven.exec.version>
		<maven.antrun.version>1.8</maven.antrun.version>

		<!-- Used by jacoco plugin to accumulate coverage results -->
		<jacoco.version>0.7.4.201502262128</jacoco.version>
	</properties>

	<profiles>
		<profile>
			<id>32b</id>
			<properties>
				<env>32</env>
				<java.install.version>jre8u74_32</java.install.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.eclipse</groupId>
					<artifactId>swt</artifactId>
					<version>${swt32.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>64b</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env>64</env>
				<java.install.version>jre8u74_64</java.install.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.eclipse</groupId>
					<artifactId>swt</artifactId>
					<version>${swt64.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>installation-32</id>
			<properties>
				<env>32</env>
				<java.install.version>jre8u74_32</java.install.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.eclipse</groupId>
					<artifactId>swt</artifactId>
					<version>${swt32.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven.antrun.version}</version>
						<executions>
							<execution>
								<id>create-staging-area</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy todir="${staging.dir}">
											<fileset dir="${basedir}/src/izpack" />
										</copy>
										<copy todir="${staging.dir}/bin/${java.install.version}">
											<fileset dir="${basedir}/etc/bin/${java.install.version}" />
										</copy>
										<copy todir="${staging.dir}/data/db">
											<fileset dir="${basedir}/etc/data/db" />
										</copy>
										<copy file="${basedir}/etc/live-docs-manager (x86).exe"
											todir="${staging.dir}" />
										<copy file="${basedir}/etc/live-docs-db (x86).exe" todir="${staging.dir}" />
										<copy file="${basedir}/etc/start_db.bat" todir="${staging.dir}" />
										<copy file="${basedir}/etc/stop_db.bat" todir="${staging.dir}" />
										<copy
											file="${basedir}/etc/dependency/swt/${swt32.version}/swt-${swt32.version}.jar"
											todir="${staging.dir}/lib" />
										<copy file="${basedir}/etc/lib/h2-${h2.version}.jar"
											todir="${staging.dir}/lib" />
									</tasks>
								</configuration>
							</execution>
							<execution>
								<id>copy-installation</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy
											file="${basedir}/target/${project.build.finalName}-installer-(x86).jar"
											todir="${basedir}/install" overwrite="true" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${staging.dir}/lib</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<excludeGroupIds>org.kubek2k,org.hamcrest,junit,org.easytesting,org.dbunit,org.mockito,org.codehaus.izpack</excludeGroupIds>
									<excludeArtifactIds>spring-test</excludeArtifactIds>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<!-- http://stackoverflow.com/questions/15432685/izpack-launch4j-invalid-uninstaller -->
						<!-- http://izpack.codehaus.org/izpack-maven-plugin/izpack-mojo.html -->
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>1.0-alpha-5</version>
						<extensions>true</extensions>
						<configuration>
							<descriptor>${basedir}/src/izpack/install_32.xml</descriptor>
							<izpackBasedir>${staging.dir}</izpackBasedir>
							<version>${project.version}</version>
							<h2.version>${h2.version}</h2.version>
							<installerFile>${basedir}/target/${project.build.finalName}-installer-(x86).jar</installerFile>
						</configuration>
						<executions>
							<execution>
								<id>standard-installer</id>
								<phase>package</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.izpack</groupId>
								<artifactId>izpack-standalone-compiler</artifactId>
								<version>${izpack.compiler.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>installation-64</id>
			<properties>
				<env>64</env>
				<java.install.version>jre8u74_64</java.install.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.eclipse</groupId>
					<artifactId>swt</artifactId>
					<version>${swt64.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven.antrun.version}</version>
						<executions>
							<execution>
								<id>create-staging-area</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy todir="${staging.dir}">
											<fileset dir="${basedir}/src/izpack" />
										</copy>
										<copy todir="${staging.dir}/bin/${java.install.version}">
											<fileset dir="${basedir}/etc/bin/${java.install.version}" />
										</copy>
										<copy todir="${staging.dir}/data/db">
											<fileset dir="${basedir}/etc/data/db" />
										</copy>
										<copy file="${basedir}/etc/live-docs-manager (x64).exe"
											todir="${staging.dir}" />
										<copy file="${basedir}/etc/live-docs-db (x64).exe" todir="${staging.dir}" />
										<copy file="${basedir}/etc/start_db.bat" todir="${staging.dir}" />
										<copy file="${basedir}/etc/stop_db.bat" todir="${staging.dir}" />
										<copy
											file="${basedir}/etc/dependency/swt/${swt64.version}/swt-${swt64.version}.jar"
											todir="${staging.dir}/lib" />
										<copy file="${basedir}/etc/lib/h2-${h2.version}.jar"
											todir="${staging.dir}/lib" />
									</tasks>
								</configuration>
							</execution>
							<execution>
								<id>copy-installation</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy
											file="${basedir}/target/${project.build.finalName}-installer-(x64).jar"
											todir="${basedir}/install" overwrite="true" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${staging.dir}/lib</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<excludeGroupIds>org.kubek2k,org.hamcrest,junit,org.easytesting,org.dbunit,org.mockito,org.codehaus.izpack</excludeGroupIds>
									<excludeArtifactIds>spring-test</excludeArtifactIds>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<!-- http://stackoverflow.com/questions/15432685/izpack-launch4j-invalid-uninstaller -->
						<!-- http://izpack.codehaus.org/izpack-maven-plugin/izpack-mojo.html -->
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>1.0-alpha-5</version>
						<extensions>true</extensions>
						<configuration>
							<descriptor>${basedir}/src/izpack/install_64.xml</descriptor>
							<izpackBasedir>${staging.dir}</izpackBasedir>
							<version>${project.version}</version>
							<h2.version>${h2.version}</h2.version>
							<installerFile>${basedir}/target/${project.build.finalName}-installer-(x64).jar</installerFile>
						</configuration>
						<executions>
							<execution>
								<id>standard-installer</id>
								<phase>package</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.izpack</groupId>
								<artifactId>izpack-standalone-compiler</artifactId>
								<version>${izpack.compiler.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>com.indexdata.livedocs</groupId>
			<artifactId>livedocs-ui-commons</artifactId>
			<version>${livedocs.ui.commons.version}</version>
			<classifier>${env}</classifier>
		</dependency>

		<dependency>
			<groupId>com.indexdata.livedocs</groupId>
			<artifactId>livedocs-security</artifactId>
			<version>${livedocs.security.version}</version>
			<classifier>${env}</classifier>
		</dependency>

		<!-- Installation -->
		<dependency>
			<groupId>org.codehaus.izpack</groupId>
			<artifactId>izpack-standalone-compiler</artifactId>
			<version>${izpack.compiler.version}</version>
		</dependency>

		<!-- SWT -->
		<dependency>
			<groupId>org.eclipse</groupId>
			<artifactId>swt</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!-- Common -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>edu.vt.middleware</groupId>
			<artifactId>vt-password</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
		</dependency>

		<!-- Persistence -->
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>net.jcip</groupId>
			<artifactId>jcip-annotations</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
		</dependency>


		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.kubek2k</groupId>
			<artifactId>springockito</artifactId>
		</dependency>
		<dependency>
			<groupId>org.kubek2k</groupId>
			<artifactId>springockito-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring.data.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-instrument</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.version}</version>
			</dependency>

			<!-- Other -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons.lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-joda</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons.collections.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons.validator.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
			</dependency>
			<dependency>
				<groupId>edu.vt.middleware</groupId>
				<artifactId>vt-password</artifactId>
				<version>${vt.password.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jasypt</groupId>
				<artifactId>jasypt</artifactId>
				<version>${jasypt.version}</version>
			</dependency>

			<!-- Persistence -->
			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-jpa</artifactId>
				<version>${querydsl.version}</version>
			</dependency>
			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${hikari.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.version}</version>
			</dependency>

			<!-- Tests -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${dbunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easytesting</groupId>
				<artifactId>fest-assert-core</artifactId>
				<version>${fest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.kubek2k</groupId>
				<artifactId>springockito</artifactId>
				<version>${springockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.kubek2k</groupId>
				<artifactId>springockito-annotations</artifactId>
				<version>${springockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/etc/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<classifier>${env}</classifier>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${start-class}</mainClass>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<executable>java</executable>
					<arguments>
						<argument>-Xmx512m</argument>
						<argument>-javaagent:${instrument.jar}</argument>
						<argument>-classpath</argument>
						<classpath />
						<argument>${start-class}</argument>
					</arguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<configuration>
					<processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.mysema.querydsl</groupId>
						<artifactId>querydsl-apt</artifactId>
						<version>${querydsl.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<compilerArgument>-Xlint:all</compilerArgument>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.version}</version>
					<configuration>
						<show>private</show>
						<nohelp>true</nohelp>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.version}</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/*IT.java</exclude>
						</excludes>
						<systemPropertyVariables>
							<jacoco-agent.destfile>${root.dir}/target/jacoco.exec</jacoco-agent.destfile>
						</systemPropertyVariables>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<destFile>${root.dir}/target/jacoco.exec</destFile>
						<includes>
							<include>com/indexdata/**</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>pre-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>post-test</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.version}</version>
					<configuration>
						<tagNameFormat>REL_@{project.version}</tagNameFormat>
						<tagBase>${svn.root.dir}/tags</tagBase>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${maven.build.helper.version}</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${project.build.directory}/generated-sources</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>com.mysema.maven</groupId>
					<artifactId>apt-maven-plugin</artifactId>
					<version>${maven.apt.version}</version>
					<configuration>
						<processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.mysema.querydsl</groupId>
							<artifactId>querydsl-apt</artifactId>
							<version>${querydsl.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>process</goal>
							</goals>
							<configuration>
								<outputDirectory>target/generated-sources</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${maven.findbugs.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven.shade.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven.exec.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.version}</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${maven.findbugs.version}</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<xmlOutputDirectory>target/site</xmlOutputDirectory>
					<onlyAnalyze>com.indexdata.livedocs.manager.*</onlyAnalyze>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>${maven.changelog.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>java.net</id>
			<url>https://maven.java.net/content/repositories/public/</url>
		</repository>
		<repository>
			<id>spring-releases</id>
			<url>http://repo.spring.io/libs-release</url>
		</repository>
		<repository>
			<id>swt-repo</id>
			<url>https://swt-repo.googlecode.com/svn/repo/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>http://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>
</project>